<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Nullable>enable</Nullable>
    <LangVersion>9.0</LangVersion>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Author>Arlo Godfrey</Author>
    <Version>0.0.10</Version>
    <Product>OwlCore</Product>
    <Description>
Have you ever seen an owl do a barrel roll? Me neither.

This project is a constant work in progress. Until a stable release, breaking changes are possible at any time.

- AbstractUI - Abstract away simple UI elements as pure data. Let something else decide how to display it.
- AbstractStorage - Completely abstract away your storage needs, no matter how you access it.
- OwlCore.Remoting - Painlessly sync member changes in C# with an external source via magic (reflection + IL weaving).
- Provisos - IAsyncInit, C# 9-in-8 features.
- Debouncer - For when something fires repeatedly. but you only care about when it stops.
- CompositeHttpClientHandler - Combine multiple HttpClientHandlers together.
- CachedHttpClientHandler - Cache http requests to disk and return them as needed.
- RateLimitedHttpClientHandler - Limit the number of requests within a window of time.
- Countless extension methods. PruneNull, Shuffle, InParallel, ChangeDate, HashMD5Fast, DistinctBy, InsertOrAdd, and more.</Description>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageIcon>logo.png</PackageIcon>
    <PackageReleaseNotes>Added missing documentation. Replaced RemoteMethodProxy with PublishDataAsync and ReceiveDataAsync extension methods. Added cancellation tokens to Remoting.</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="logo.png" />
    <None Include="LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
	  <None Include="logo.png">
		  <Pack>True</Pack>
		  <PackagePath></PackagePath>
	  </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Cauldron.BasicInterceptors" Version="3.2.3" />
    <PackageReference Include="Cauldron.Interception.Fody" Version="3.2.3" />
    <PackageReference Include="MessagePack" Version="2.2.85" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="5.0.0" />
    <PackageReference Include="Microsoft.Toolkit" Version="7.0.0" />
    <PackageReference Include="Microsoft.Toolkit.Diagnostics" Version="7.0.0" />
    <PackageReference Include="Microsoft.Toolkit.Mvvm" Version="7.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="Nito.AsyncEx.Coordination" Version="5.1.0" />
    <PackageReference Include="System.Text.Json" Version="4.7.2" />
    <PackageReference Include="System.Threading.Tasks.Dataflow" Version="5.0.0" />
  </ItemGroup>

</Project>
