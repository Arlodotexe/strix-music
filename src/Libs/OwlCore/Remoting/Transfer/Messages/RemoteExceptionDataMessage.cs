using Newtonsoft.Json;
using System;
using System.Reflection;

namespace OwlCore.Remoting.Transfer
{
    /// <summary>
    /// Holds data regarding an exception that occured on a remote node while executing a member change.
    /// </summary>
    public class RemoteExceptionDataMessage : RemoteMessageBase
    {
        /// <summary>
        /// Creates a new instance of <see cref="RemoteExceptionDataMessage"/>.
        /// </summary>
        /// <param name="message">Gets a message that describes the current exception.</param>
        /// <param name="stackTrace">Gets a string representation of the immediate frames on the call stack at the time of exception, if available.</param>
        /// <param name="targetSiteSignature">The member signature of the <see cref="MethodInfo"/> that caused the exception to throw, if available.</param>
        public RemoteExceptionDataMessage(string? message, string? stackTrace, string targetSiteSignature)
        {
            Message = message;
            StackTrace = stackTrace;
            TargetSiteSignature = targetSiteSignature;

            Action = RemotingAction.ExceptionThrown;
        }

        /// <summary>
        /// Creates a new instance of <see cref="RemoteExceptionDataMessage"/>.
        /// </summary>
        public RemoteExceptionDataMessage()
        {
            Action = RemotingAction.ExceptionThrown;
        }

        /// <summary>
        /// Gets a message that describes the current exception.
        /// </summary>
        public string? Message { get; }

        /// <summary>
        /// Gets a string representation of the immediate frames on the call stack at the time of exception, if available.
        /// </summary>
        public string? StackTrace { get; }

        /// <summary>
        /// The member signature of the <see cref="MethodInfo"/> that caused the exception to throw, if available.
        /// </summary>
        /// <remarks>
        /// Generated by <see cref="MemberRemote.CreateMemberSignature"/>.
        /// </remarks>
        public string? TargetSiteSignature { get; }
    }
}
