<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StrixMusic.Services</name>
    </assembly>
    <members>
        <member name="T:StrixMusic.Services.Settings.DefaultSettingsService">
            <summary>
            The instance of <see cref="T:StrixMusic.Services.Settings.ISettingsService"/> used by default
            <remarks>Not used by Cores. User-configurable settings go here.</remarks>
            </summary>
        </member>
        <member name="M:StrixMusic.Services.Settings.DefaultSettingsService.#ctor(StrixMusic.Services.StorageService.ITextStorageService)">
            <summary>
            Initializes a new instance of the <see cref="T:StrixMusic.Services.Settings.DefaultSettingsService"/> class.
            </summary>
            <param name="textStorageService">The text storage service to be used by this instance.</param>
        </member>
        <member name="P:StrixMusic.Services.Settings.DefaultSettingsService.Id">
            <inheritdoc/>
        </member>
        <member name="T:StrixMusic.Services.Settings.ISettingsService">
            <summary>
            Manages interactions with app settings.
            </summary>
        </member>
        <member name="M:StrixMusic.Services.Settings.ISettingsService.SetValue``1(System.String,System.Object,System.Boolean)">
            <summary>
            Assigns a value to a settings key.
            </summary>
            <typeparam name="T">The type of the object bound to the key.</typeparam>
            <param name="key">The key to check.</param>
            <param name="value">The value to assign to the setting key.</param>
            <param name="overwrite">Indicates whether or not to overwrite the setting, if it already exists.</param>
        </member>
        <member name="M:StrixMusic.Services.Settings.ISettingsService.GetValue``1(System.String)">
            <summary>
            Reads a value from the current <see cref="T:System.IServiceProvider"/> instance and returns its casting in the right type.
            </summary>
            <typeparam name="T">The type of the object to retrieve.</typeparam>
            <param name="key">The key associated to the requested object.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the value for the storage <paramref name="key"/>.</returns>
        </member>
        <member name="M:StrixMusic.Services.Settings.ISettingsService.SetValue``1(System.String,System.Object,System.String,System.Boolean)">
            <summary>
            Assigns a value to a settings key.
            </summary>
            <typeparam name="T">The type of the object bound to the key.</typeparam>
            <param name="key">The key to check.</param>
            <param name="value">The value to assign to the setting key.</param>
            <param name="identifier">Identifies a unique version of this settings key.</param>
            <param name="overwrite">Indicates whether or not to overwrite the setting, if it already exists.</param>
        </member>
        <member name="M:StrixMusic.Services.Settings.ISettingsService.GetValue``1(System.String,System.String)">
            <summary>
            Reads a value from the current <see cref="T:System.IServiceProvider"/> instance and returns its casting in the right type.
            </summary>
            <typeparam name="T">The type of the object to retrieve.</typeparam>
            <param name="key">The key associated to the requested object.</param>
            <param name="identifier">Identifies a unique version of this settings key.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the value for the storage <paramref name="key"/> with the <paramref name="identifier"/>.</returns>
        </member>
        <member name="M:StrixMusic.Services.Settings.ISettingsService.ResetToDefaults">
            <summary>
            Deletes all the existing setting values.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:StrixMusic.Services.Settings.ISettingsService.ResetToDefaults(System.String)">
            <summary>
            Deletes all the existing setting values for a given <paramref name="identifier"/>.
            </summary>
            <param name="identifier">Identifies a unique settings store.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="E:StrixMusic.Services.Settings.ISettingsService.SettingChanged">
            <summary>
            Fires when a setting has changed.
            </summary>
        </member>
        <member name="T:StrixMusic.Services.Settings.SettingChangedEventArgs">
            <summary>
            Holds information about a changed setting.
            </summary>
        </member>
        <member name="P:StrixMusic.Services.Settings.SettingChangedEventArgs.Key">
            <summary>
            The identifier for this setting
            </summary>
        </member>
        <member name="P:StrixMusic.Services.Settings.SettingChangedEventArgs.Value">
            <summary>
            The value of the new setting.
            </summary>
        </member>
        <member name="T:StrixMusic.Services.Settings.SettingsKeys">
            <summary>
            A <see langword="class"/> containing keys for all settings throughout the main app.
            </summary>
            <remarks>
            This <see lang="class"/> is used with reflection to generate settings files.
            </remarks>
        </member>
        <member name="F:StrixMusic.Services.Settings.SettingsKeys.PreferredShell">
            <summary>
            Gets the default value for <see cref="!:"/> in settings.
            </summary>
        </member>
        <member name="F:StrixMusic.Services.Settings.SettingsKeys.CoreRegistry">
            <summary>
            Stored information about the cores that have been configured.
            </summary>
        </member>
        <member name="T:StrixMusic.Services.Settings.SettingsServiceBase">
            <summary>
            A <see langword="class"/> that handles the local app settings.
            </summary>
        </member>
        <member name="M:StrixMusic.Services.Settings.SettingsServiceBase.#ctor">
            <summary>
            A service to store and retrieve settings throughout the app.
            </summary>
        </member>
        <member name="M:StrixMusic.Services.Settings.SettingsServiceBase.#ctor(StrixMusic.Services.StorageService.ITextStorageService)">
            <summary>
            A service to store and retrieve settings throughout the app.
            </summary>
            <param name="textStorageService">The text storage service to be used by this instance.</param>
        </member>
        <member name="M:StrixMusic.Services.Settings.SettingsServiceBase.SetValue``1(System.String,System.Object,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:StrixMusic.Services.Settings.SettingsServiceBase.GetValue``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:StrixMusic.Services.Settings.SettingsServiceBase.ResetToDefaults">
            <inheritdoc/>
        </member>
        <member name="M:StrixMusic.Services.Settings.SettingsServiceBase.ResetToDefaults(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:StrixMusic.Services.Settings.SettingsServiceBase.SetValue``1(System.String,System.Object,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:StrixMusic.Services.Settings.SettingsServiceBase.GetValue``1(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:StrixMusic.Services.Settings.SettingsServiceBase.Id">
            <summary>
            Identifies this settings instance.
            </summary>
        </member>
        <member name="P:StrixMusic.Services.Settings.SettingsServiceBase.SettingsKeysType">
            <summary>
            The Type used to hold settings keys and default value for this implementation of the Settings Service.
            </summary>
        </member>
        <member name="E:StrixMusic.Services.Settings.SettingsServiceBase.SettingChanged">
            <inheritdoc cref="E:StrixMusic.Services.Settings.ISettingsService.SettingChanged"/>
        </member>
        <member name="T:StrixMusic.Services.StorageService.FileScanStateEventArgs">
            <summary>
            Event args for the file scanning related events.
            </summary>
        </member>
        <member name="M:StrixMusic.Services.StorageService.FileScanStateEventArgs.#ctor(StrixMusic.CoreInterfaces.Interfaces.Storage.IFolderData,StrixMusic.CoreInterfaces.Interfaces.Storage.IFileData)">
            <summary>
            Creates a new instance of <see cref="T:StrixMusic.Services.StorageService.FileScanStateEventArgs"/>.
            </summary>
            <param name="folderData">The containing folder.</param>
            <param name="fileData">The file being updated.</param>
        </member>
        <member name="P:StrixMusic.Services.StorageService.FileScanStateEventArgs.FileData">
            <inheritdoc cref="T:StrixMusic.CoreInterfaces.Interfaces.Storage.IFileData"/>
        </member>
        <member name="P:StrixMusic.Services.StorageService.FileScanStateEventArgs.FolderData">
            <inheritdoc cref="T:StrixMusic.CoreInterfaces.Interfaces.Storage.IFolderData"/>
        </member>
        <member name="T:StrixMusic.Services.StorageService.IFileSystemService">
            <summary>
            Provides safe interactions with the file system.
            </summary>
        </member>
        <member name="M:StrixMusic.Services.StorageService.IFileSystemService.Init">
            <summary>
            Initializes the service, performing first time setup tasks.
            </summary>
            <returns><placeholder>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</placeholder></returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.IFileSystemService.PickFolder">
            <summary>
            Prompts the user to select a folder to access. Upon selection, the folder is scanned and ingested.
            </summary>
            <returns><placeholder>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</placeholder></returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.IFileSystemService.GetPickedFolders">
            <summary>
            Returns the folders that the user has granted access to.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> containing paths pointing to the folders the user has granted access to.</returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.IFileSystemService.RevokeAccess(StrixMusic.CoreInterfaces.Interfaces.Storage.IFolderData)">
            <summary>
            Called when the user wants to revoke access to a folder.
            </summary>
            <param name="folder">The folder to be revoked.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asyncronous operation.</returns>
        </member>
        <member name="T:StrixMusic.Services.StorageService.ITextStorageService">
            <summary>
            The <see langword="interface"/> to handle storing and retreiving data.
            </summary>
        </member>
        <member name="M:StrixMusic.Services.StorageService.ITextStorageService.GetValueAsync(System.String)">
            <summary>
            Returns a stored setting, deserialized into a type.
            </summary>
            <typeparam name="T">The type to deserialize into.</typeparam>
            <param name="filename">The name of the file to get.</param>
            <returns>String representation of the stored value. Null if file isn't found.</returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.ITextStorageService.SetValueAsync(System.String,System.String)">
            <summary>
            Stores data locally.
            </summary>
            <param name="filename">The name of the file (including the file extension).</param>
            <param name="value">The value to be stored.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation..</returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.ITextStorageService.GetValueAsync(System.String,System.String)">
            <summary>
            Returns a stored setting, deserialized into a type.
            </summary>
            <typeparam name="T">The type to deserialize into.</typeparam>
            <param name="filename">The name of the file to get.</param>
            <param name="path">A relative path (separated by forward slashes), to save the file in a subfolder.</param>
            <returns>String representation of the stored value. Null if file isn't found.</returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.ITextStorageService.SetValueAsync(System.String,System.String,System.String)">
            <summary>
            Stores data locally.
            </summary>
            <param name="filename">The name of the file (including the file extension).</param>
            <param name="value">The value to be stored.</param>
            <param name="path">A relative path (separated by forward slashes), to save the file in a subfolder.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> representing the asyncronous operation.</returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.ITextStorageService.RemoveByPathAsync(System.String)">
            <summary>
            Removes all stored data associated with an <param name="identifier"/>.
            </summary>
            <param name="identifier">The identifier to lookup.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.ITextStorageService.RemoveAll">
            <summary>
            Removes all saved settings.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.ITextStorageService.FileExistsAsync(System.String)">
            <summary>
            Checks if the file exists.
            </summary>
            <param name="filename">The name of the file (including the file extension).</param>
            <returns>True if the file exists, otherwise false.</returns>
        </member>
        <member name="M:StrixMusic.Services.StorageService.ITextStorageService.FileExistsAsync(System.String,System.String)">
            <summary>
            Checks if the file exists.
            </summary>
            <param name="filename">The name of the file (including the file extension).</param>
            <param name="path">A relative path (separated by forward slashes), to save the file in a subfolder.</param>
            <returns>True if the file exists, otherwise false.</returns>
        </member>
        <member name="T:StrixMusic.Services.SuperShell.ISuperShellService">
            <summary>
            Interacts with the app's SuperShell, that overlays the entire app.
            </summary>
        </member>
        <member name="M:StrixMusic.Services.SuperShell.ISuperShellService.Show(StrixMusic.Services.SuperShell.SuperShellDisplays)">
            <summary>
            Unhides the SuperShell and displays the specified view.
            </summary>
            <param name="shellDisplay">A <see cref="T:StrixMusic.Services.SuperShell.SuperShellDisplays"/> specifying which view will be shown.</param>
        </member>
        <member name="M:StrixMusic.Services.SuperShell.ISuperShellService.Hide">
            <summary>
            Hides the SuperShell.
            </summary>
        </member>
        <member name="E:StrixMusic.Services.SuperShell.ISuperShellService.VisibilityChanged">
            <summary>
            Occurs when the SuperShell is shown or hidden.
            </summary>
        </member>
        <member name="T:StrixMusic.Services.SuperShell.SuperShellDisplays">
            <summary>
            An <see langword="enum"/> that labels the various content that can be displayed in the SuperShell.
            </summary>
        </member>
    </members>
</doc>
