<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:strix="using:StrixMusic.Sdk.WinUI.Controls"
    xmlns:collections="using:StrixMusic.Shells.Groove.Controls.Collections"
    xmlns:groovevms="using:StrixMusic.Shells.Groove.ViewModels.Collections"
    xmlns:viewModels="using:StrixMusic.Sdk.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    x:Class="StrixMusic.Shells.Groove.Styles.Collections.PanePlaylistCollectionStyle">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///StrixMusic.Shells.Groove/Resources/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="PanePlaylistCollectionDataTemplate" x:DataType="collections:GroovePlaylistCollection">
        <ListView x:Name="PART_Selector" ItemsSource="{x:Bind ViewModel.PlaylistCollection.Playlists, Mode=OneWay}"
                  HorizontalAlignment="Stretch" SelectedItem="{x:Bind ViewModel.SelectedPlaylist, Mode=TwoWay}"
                  SelectionMode="Single" IsItemClickEnabled="True">
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Loaded">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.PlaylistCollection.InitPlaylistCollectionAsyncCommand, Mode=OneWay}"/>
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="ItemClick">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.NavigateToPlaylistCommand, Mode=OneWay}" InputConverter="{StaticResource ItemClickEventArgsToClickedItemConverter}"/>
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
            <ListView.Header>
                <Grid>
                    <ProgressBar IsIndeterminate="True" Visibility="{x:Bind ViewModel.PlaylistCollection.PopulateMorePlaylistsCommand.IsRunning, Mode=OneWay}"/>
                    <ContentPresenter x:Name="PART_EmptyContentPresenter"/>
                </Grid>
            </ListView.Header>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Background" Value="{StaticResource TransparentBackgroundRevealBrush}" />
                    <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}" />
                    <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrush}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Height" Value="48"/>
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                    <Setter Property="FocusVisualMargin" Value="-3" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="PointerOver">
                                                <VisualState.Setters>
                                                    <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPointerOver}" />
                                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPointerOver}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPointerOver}" />
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <VisualState.Setters>
                                                    <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPressed}" />
                                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPressed}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPressed}" />
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                                </Storyboard>
                                            </VisualState>
                                            <!--<VisualState x:Name="Disabled">
                                                <VisualState.Setters>
                                                    <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource ToggleButtonRevealBackgroundDisabled}" />
                                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushDisabled}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundDisabled}" />
                                                </VisualState.Setters>
                                            </VisualState>-->
                                            <VisualState x:Name="Selected">
                                                <VisualState.Setters>
                                                    <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource ToggleButtonRevealBackgroundChecked}" />
                                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushChecked}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="PointerOverSelected">
                                                <VisualState.Setters>
                                                    <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                    <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedPointerOver}" />
                                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPointerOver}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="PressedSelected">
                                                <VisualState.Setters>
                                                    <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                    <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedPressed}" />
                                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPressed}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />
                                                </VisualState.Setters>
                                                <Storyboard>
                                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                                </Storyboard>
                                            </VisualState>
                                            <!--<VisualState x:Name="CheckedDisabled">
                                                <VisualState.Setters>
                                                    <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedDisabled}" />
                                                    <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedDisabled}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                                                </VisualState.Setters>
                                            </VisualState>-->
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    
                                    <Rectangle x:Name="SelectionIndicator" Width="4" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                                    <ContentPresenter x:Name="ContentPresenter"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      AutomationProperties.AccessibilityView="Raw" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="viewModels:PlaylistViewModel">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <strix:SafeImage Height="20" Width="20" Margin="14,0" ImageCollection="{x:Bind}" />
                        <TextBlock Text="{x:Bind Name}" Grid.Column="1"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </DataTemplate>

    <Style x:Key="PanePlaylistCollectionStyle" TargetType="collections:GroovePlaylistCollection">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="collections:GroovePlaylistCollection">
                        <ContentControl ContentTemplate="{StaticResource PanePlaylistCollectionDataTemplate}"
                                        HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

</ResourceDictionary>
